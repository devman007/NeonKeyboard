// Generated by view binder compiler. Do not edit!
package keyboard.neon.newboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import keyboard.neon.newboard.R;
import keyboard.neon.newboard.common.FlorisViewFlipper;
import keyboard.neon.newboard.ime.text.keyboard.TextKeyboardView;
import keyboard.neon.newboard.ime.text.smartbar.CandidateView;
import keyboard.neon.newboard.ime.text.smartbar.SmartbarQuickActionButton;
import keyboard.neon.newboard.ime.text.smartbar.SmartbarView;

public final class SmartbarBinding implements ViewBinding {
  @NonNull
  private final SmartbarView rootView;

  @NonNull
  public final FlorisViewFlipper actionEndArea;

  @NonNull
  public final FlorisViewFlipper actionStartArea;

  @NonNull
  public final SmartbarQuickActionButton backButton;

  @NonNull
  public final CandidateView candidates;

  @NonNull
  public final TextKeyboardView clipboardCursorRow;

  @NonNull
  public final HorizontalScrollView inlineSuggestions;

  @NonNull
  public final LinearLayout inlineSuggestionsStrip;

  @NonNull
  public final FlorisViewFlipper mainArea;

  @NonNull
  public final TextKeyboardView numberRow;

  @NonNull
  public final SmartbarQuickActionButton privateModeButton;

  @NonNull
  public final SmartbarQuickActionButton quickActionOneHandedToggle;

  @NonNull
  public final SmartbarQuickActionButton quickActionOpenSettings;

  @NonNull
  public final SmartbarQuickActionButton quickActionRedo;

  @NonNull
  public final SmartbarQuickActionButton quickActionSwitchToEditingContext;

  @NonNull
  public final SmartbarQuickActionButton quickActionSwitchToMediaContext;

  @NonNull
  public final SmartbarQuickActionButton quickActionToggle;

  @NonNull
  public final SmartbarQuickActionButton quickActionUndo;

  @NonNull
  public final LinearLayout quickActions;

  private SmartbarBinding(@NonNull SmartbarView rootView, @NonNull FlorisViewFlipper actionEndArea,
      @NonNull FlorisViewFlipper actionStartArea, @NonNull SmartbarQuickActionButton backButton,
      @NonNull CandidateView candidates, @NonNull TextKeyboardView clipboardCursorRow,
      @NonNull HorizontalScrollView inlineSuggestions, @NonNull LinearLayout inlineSuggestionsStrip,
      @NonNull FlorisViewFlipper mainArea, @NonNull TextKeyboardView numberRow,
      @NonNull SmartbarQuickActionButton privateModeButton,
      @NonNull SmartbarQuickActionButton quickActionOneHandedToggle,
      @NonNull SmartbarQuickActionButton quickActionOpenSettings,
      @NonNull SmartbarQuickActionButton quickActionRedo,
      @NonNull SmartbarQuickActionButton quickActionSwitchToEditingContext,
      @NonNull SmartbarQuickActionButton quickActionSwitchToMediaContext,
      @NonNull SmartbarQuickActionButton quickActionToggle,
      @NonNull SmartbarQuickActionButton quickActionUndo, @NonNull LinearLayout quickActions) {
    this.rootView = rootView;
    this.actionEndArea = actionEndArea;
    this.actionStartArea = actionStartArea;
    this.backButton = backButton;
    this.candidates = candidates;
    this.clipboardCursorRow = clipboardCursorRow;
    this.inlineSuggestions = inlineSuggestions;
    this.inlineSuggestionsStrip = inlineSuggestionsStrip;
    this.mainArea = mainArea;
    this.numberRow = numberRow;
    this.privateModeButton = privateModeButton;
    this.quickActionOneHandedToggle = quickActionOneHandedToggle;
    this.quickActionOpenSettings = quickActionOpenSettings;
    this.quickActionRedo = quickActionRedo;
    this.quickActionSwitchToEditingContext = quickActionSwitchToEditingContext;
    this.quickActionSwitchToMediaContext = quickActionSwitchToMediaContext;
    this.quickActionToggle = quickActionToggle;
    this.quickActionUndo = quickActionUndo;
    this.quickActions = quickActions;
  }

  @Override
  @NonNull
  public SmartbarView getRoot() {
    return rootView;
  }

  @NonNull
  public static SmartbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SmartbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.smartbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SmartbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_end_area;
      FlorisViewFlipper actionEndArea = ViewBindings.findChildViewById(rootView, id);
      if (actionEndArea == null) {
        break missingId;
      }

      id = R.id.action_start_area;
      FlorisViewFlipper actionStartArea = ViewBindings.findChildViewById(rootView, id);
      if (actionStartArea == null) {
        break missingId;
      }

      id = R.id.back_button;
      SmartbarQuickActionButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.candidates;
      CandidateView candidates = ViewBindings.findChildViewById(rootView, id);
      if (candidates == null) {
        break missingId;
      }

      id = R.id.clipboard_cursor_row;
      TextKeyboardView clipboardCursorRow = ViewBindings.findChildViewById(rootView, id);
      if (clipboardCursorRow == null) {
        break missingId;
      }

      id = R.id.inline_suggestions;
      HorizontalScrollView inlineSuggestions = ViewBindings.findChildViewById(rootView, id);
      if (inlineSuggestions == null) {
        break missingId;
      }

      id = R.id.inline_suggestions_strip;
      LinearLayout inlineSuggestionsStrip = ViewBindings.findChildViewById(rootView, id);
      if (inlineSuggestionsStrip == null) {
        break missingId;
      }

      id = R.id.main_area;
      FlorisViewFlipper mainArea = ViewBindings.findChildViewById(rootView, id);
      if (mainArea == null) {
        break missingId;
      }

      id = R.id.number_row;
      TextKeyboardView numberRow = ViewBindings.findChildViewById(rootView, id);
      if (numberRow == null) {
        break missingId;
      }

      id = R.id.private_mode_button;
      SmartbarQuickActionButton privateModeButton = ViewBindings.findChildViewById(rootView, id);
      if (privateModeButton == null) {
        break missingId;
      }

      id = R.id.quick_action_one_handed_toggle;
      SmartbarQuickActionButton quickActionOneHandedToggle = ViewBindings.findChildViewById(rootView, id);
      if (quickActionOneHandedToggle == null) {
        break missingId;
      }

      id = R.id.quick_action_open_settings;
      SmartbarQuickActionButton quickActionOpenSettings = ViewBindings.findChildViewById(rootView, id);
      if (quickActionOpenSettings == null) {
        break missingId;
      }

      id = R.id.quick_action_redo;
      SmartbarQuickActionButton quickActionRedo = ViewBindings.findChildViewById(rootView, id);
      if (quickActionRedo == null) {
        break missingId;
      }

      id = R.id.quick_action_switch_to_editing_context;
      SmartbarQuickActionButton quickActionSwitchToEditingContext = ViewBindings.findChildViewById(rootView, id);
      if (quickActionSwitchToEditingContext == null) {
        break missingId;
      }

      id = R.id.quick_action_switch_to_media_context;
      SmartbarQuickActionButton quickActionSwitchToMediaContext = ViewBindings.findChildViewById(rootView, id);
      if (quickActionSwitchToMediaContext == null) {
        break missingId;
      }

      id = R.id.quick_action_toggle;
      SmartbarQuickActionButton quickActionToggle = ViewBindings.findChildViewById(rootView, id);
      if (quickActionToggle == null) {
        break missingId;
      }

      id = R.id.quick_action_undo;
      SmartbarQuickActionButton quickActionUndo = ViewBindings.findChildViewById(rootView, id);
      if (quickActionUndo == null) {
        break missingId;
      }

      id = R.id.quick_actions;
      LinearLayout quickActions = ViewBindings.findChildViewById(rootView, id);
      if (quickActions == null) {
        break missingId;
      }

      return new SmartbarBinding((SmartbarView) rootView, actionEndArea, actionStartArea,
          backButton, candidates, clipboardCursorRow, inlineSuggestions, inlineSuggestionsStrip,
          mainArea, numberRow, privateModeButton, quickActionOneHandedToggle,
          quickActionOpenSettings, quickActionRedo, quickActionSwitchToEditingContext,
          quickActionSwitchToMediaContext, quickActionToggle, quickActionUndo, quickActions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
